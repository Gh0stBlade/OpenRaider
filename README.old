
 OpenRaider FAQ/README  (2003.07.05)
 -----------------------------------------------------------------

 NOTES
 -----------------------------------------------------------------
 Build 0.1.2pre series


 INSTALL
 -----------------------------------------------------------------

 You may choose to use either apt if you have debian, or use the 
 source installation.  The binary tarballs may be provided with an
 install script later.

 Installation with deb:

	1. If you're in debian:

		dpkg -iE openraider_x.x.x.x-1_i386.deb

	2. If you run RedHat or an RPM distro use alien:

		alien --to-rpm openraider_x.x.x.x-1_i386.deb

	   This makes an rpm for you to install:

		rpm -Uhv openraider-x.x.x.x-2.i386.rpm


 Installation with apt:

	1. Add these lines to /etc/apt/sources.list

		# OpenRaider
		deb http://openraider.sourceforge.net/debian/ ./
		deb-src http://openraider.sourceforge.net/debian/ ./ 

	2. Install the openraider package:

		apt-get update
		apt-get install -u openraider


 Installation from source archive:

	1. Extract source from tarball:

		tar zxvf openraider-x.x.x.x.tar.gz

	2. Change to source directory:

		cd openraider-x.x.x.x/

	3. Build game source:

		make

	4. Install game, data files, and default config:

		make install



 SETUP
 -----------------------------------------------------------------

 1. Setup for the user that will play the game:

	cd /usr/share/OpenRaider
	sh setup.sh


 2. You can use paks from any Tomb Raider version supported and
    most user made paks for Tomb Raider.  Only PHD, TR1, TR2, TR3, 
    and TR4 paks are supported as of this writing.

    If you don't own a Tomb Raider game or demo, then you can
    download a pak from:

	 http://home01.wxs.nl/~eland037/index.htm

    I suggest 'Yvel Woods' from the 'TR2' section.  It's small,
    but very nice looking still.  Takes only 6-8mins over a 28.8.
    Also Villa Mortal 2 from the 'TR1' section is nice.


 3. Edit your ~/.OpenRaider/OpenRaider.init

    Edit 'Driver' to your libGL for hardware acceleration:

       Driver=/usr/lib/libGL.so.1

    Edit 'Map' lines as needed.  I suggest removing all your
    Map=... lines to begin with, since no maps are bundled with
    this release.  Then add maps as you get them like so:

    If you got Yvel.zip, then unzip it into ~/.OpenRaider/paks/,
    then add the line:

       Map=Yvel.tr2

 4. Setting up external sound SFX, for TR2 and TR3 paks only.

    TR2 and TR3 ( both have file extension '.tr2' ) paks don't
    have sound data contained in the pak itself, but instead
    they share a common SFX file ( often MAIN.SFX ) for each
    pak from a given Tomb Raider version.

    eg 'The Lost Artifact' has a SFX for all it's pak files.

    Simply link to your SFX file in the same directory as
    your map files using it's name as the base like so:

	cd ~/.OpenRaider/paks/tr3/
	cp /mnt/cdrom/data/MAIN.SFX .
	for i in *.tr2; do ln -s MAIN.SFX $i.sfx; done

    This copies your SFX file off the cdrom to your tr3 pak
    directory, then symlinks to all your sfx aliases to MAIN.SFX.

    OpenRaider currently looks for mapfilename.sfx to find the
    external sound paks for TR2 and TR3 - the other tombraider
    versions have sounds files contained in their own paks. There
    are plans for a metafile wrapper for maps/paks to have better
    control over in game thumbnails, SFX options, and more.

 5. Font setup
    
    New for OpenRaider 1.2, OpenRaider now uses TTF fonts to
    generate font textures on the fly.  Just copy a TTF to
    ~/.OpenRaider/data/test.ttf to use it in game. 


 KEY BINDINGS
 -----------------------------------------------------------------

   <Alt><Enter>  - Toggle fullscreen
   <Esc>         - Interactive Level load menu
   `             - Console toggle on/off
   Mouse         - Turn
   MouseBtn Left - Shoot
   w             - Move forward
   s             - Move back
   e             - Move down
   q             - Move up
   r             - Play sound quick test
   /             - Drop a waypoint test ( formally undocumented )
   [ ]           - Adjust idle animation for testing


 CONSOLE COMMANDS
 ---------------------------------------------------------------------
     
 Console commands ( w/o "", BOOL is now '0' or '1' for less typing )
 Pressing <UP> will go back to last command entered ( saves typing )


    Network
    ------------------------------------------------------------------
    "server"              - Start network listen server
    "killserver"          - Stop network listen server
    "port INT"            - Set network port number
    "connect HOSTNAME"    - Connect to network server at HOSTNAME
    "disconnect"          - Disconnect from network server

    Game
    ------------------------------------------------------------------
    "quit"                - Quit the game
    "sshot"               - Take screenshot
    "play INT"            - Play sound fx 'NUM'
    "loadlevel STRING"    - Load level with mapname STRING
    "sensitivity.x FLOAT" - Set mouse sens for X movement
    "sensitivity.y FLOAT" - Set mouse sens for Y movement
    "fullscreen"          - Toggle's fullscreen mode
    "walk"                - Toggle world clipping on
    "ghost"               - Toggle world clipping off
    "fly"                 - Toggle world clipping off w/o gravity
    "noclip"              - Toggle world clipping in cycle
    "hop"                 - Toggle room hopping hack
    "showfps BOOL"        - Show FPS
    "mem ARG"             - Where ARG is usage or report
    "resize STRING"       - Change resolution to "xga", "svga", "vga"


    Render
    ------------------------------------------------------------------
    "wireframe"           - Render in wireframe ( For debugging )
    "solid"               - Render solid color polygons
    "texture"             - Render with textures
    "vertexlight"         - Render with vertexlights
    "titlescreen"         - Render titlescreen
    "r_animate BOOL"      - Animate all models at once
    "r_upf BOOL"          - Update room render list once per frame
    "r_ponytail BOOL"     - Render ponytail on lara
    "r_pigtails BOOL"     - Render ponytails as pigtails on lara
    "r_ponyangle INT"     - Set rotation of ponytail on lara
    "r_ponyx INT"         - Set Y offset of ponytail on lara
    "r_ponyy INT"         - Set Y offset of ponytail on lara
    "r_ponyz INT"         - Set Z offset of ponytail on lara
    "r_viewmodel INT"     - Load skeletal model with index 'NUM'
    "r_fog BOOL"          - Render fog toggle
    "r_portal BOOL"       - Render 'portals' in rooms
    "r_particle BOOL"     - Render particles
    "r_vmodel BOOL"       - Render view model
    "r_sprite BOOL"       - Render sprites ( room fx and items )
    "r_roommodel BOOL"    - Render room models
    "r_entmodel BOOL"     - Render entity models
    "r_light BOOL"        - Render with GL lights
    "r_ralpha BOOL"       - Render alpha pass for rooms
    "r_vis BOOL"          - Render using visiblity checking
    "r_oneroom"           - Render only the current room
    "r_allrooms"          - Render all rooms in the level ( debug/stress )


	Set commands
	------------------------------------------------------------------
	mousegrab <bool>		- Set mouse grabbing on/off



	Stat commands
	------------------------------------------------------------------
	fps				- Toggle showing FPS
	pos				- Show current location
	room
		flags			- Show room flags in hex

 

 REPORT BUGS
 -----------------------------------------------------------------
 When submitting bugs please try to include:
    
    1. Operating system and type of computer 
          eg Linux, x86

    2. Make and model of your graphics card
          eg Nvidia GeForce 3

    3. Version of OpenRaider, and any odd libraries
          eg OpenRaider-0.1.0pre6-20020997 built with OpenGL 1.3

    4. Screenshot for visual bugs
          eg Use 'sshot' in game, zip screenshot and email it

    5. Text of an errors output by OpenRaider
          eg ERROR: Gates of hell unleashed on world, Hell.cpp:123


 ABOUT
 -----------------------------------------------------------------

 OpenRaider is based on code, specs, and alogrithms from:
 * GooseEgg/Freyja 3d Modelers by Mongoose
 * TR Rosetta Stone spec sheet by Anonymous
 * TRView 1.0.0 by Yuri Zhivago, with patches by Mongoose

 All code should be GPLed, unless otherwise noted.

 If you're interested in helping, donating resources, or just
 offer moral support drop me an email or visit irc.linux.com 
 channel #freyja. 

 -- Terry 'Mongoose' Hendrix II <stu7440@westga.edu>




 -----------------------------------------------------------------
 OpenRaider FAQ
 -----------------------------------------------------------------

 0. How do I build OpenRaider?

 1. Will OpenRaider get support for my platform?

 2. What cards and drivers have been tested?

 3. I don't hear sound, can you help me?

 4. I'm getting sefaults loading sounds or debugging OpenRaider.

 5. What are all those colors for in Wireframe mode?

 6. Why does OpenRaider use TTF fonts?

 -----------------------------------------------------------------

 0. How do I build OpenRaider?

 0.1. OpenRaider requires the following as of 2002.01.02; other
      packages may work just as well but haven't been tested:
      + Linux 2.4.16 SMP kernel (Debian distrobution)
      + GCC 2.95.2 compiler and supporting development packages
      + X11 4.1.0 with X11 development package
      + OpenGL 1.2 core and utils development packages
      + SDL 1.2.1 development package
      + OpenAL 0.0.6 development package
      + libz 1.1.3 development package

 0.2. If you're missing some of these packages you can install 
      them from your distrobution or source.  There are so many
      distrobutions it wouldn't be practical to have step by step
      information here.  I'll instead list places to get source
      for less commonly installed packages.

 0.3. X11 GLX ( Hardware accelerated drivers )
      (X11 4.1.x) Comes bundled with 3d drivers
      (X11 4.0.x) http://dri.sourceforge.net
      (X11 3.3.6) http://utah-glx.sourceforge.net

      If your 3d card isn't supported in 4.1.x try 3.3.6.

 0.4. OpenAL CVS
      cvs -d :pserver:guest@cvs.lokigames.com:/cvs login
      cvs -d :pserver:guest@cvs.lokigames.com:/cvs checkout openal

 0.5. SDL CVS
      cvs -d :pserver:guest@cvs.lokigames.com:/cvs login
      cvs -d :pserver:guest@cvs.lokigames.com:/cvs checkout SDL

 -----------------------------------------------------------------

 1. Will OpenRaider get support for my platform?

 1.1. It's possible.  I'm only supporting Linux until I get closer
      to a Beta release.  Other platforms that are planned are
      Mac OS X, FreeBSD, Windows NT/9x, and Linux PPC in no order.
 
      Some of these may already work, but aren't tested.

 -----------------------------------------------------------------

 2. What cards and drivers have been tested?

 2.1. DRI ( GLX )
      * Matrox G400 ( Reference card and driver ) 
        * BUG: None known

      * ATI Radeon ( Last tested 0.0.3-20010604 )
        * BUG: 'lineloop' or polygon outline in solid color

      * Voodoo 3 ( Last tested 0.0.3-20020104 )
        * BUG: None known

 -----------------------------------------------------------------

 3. I don't hear sound, can you help me?

 3.1. Make sure you built in OpenAL support.

      Make sure you have OpenAL enabled in your OpenRaider.init:

         [Audio.OpenAL]
         Enable=true

      Make sure your TR pak type is supported to play sounds.

      Make sure you have sound files, you can't get sound files 
      redistributed with any other homemade paks besides TR4 paks.

 -----------------------------------------------------------------

 4. I'm getting sefaults loading sounds or debugging OpenRaider.

 4.1. Disable OpenAL in your OpenRaider.init:

         [Audio.OpenAL]
         Enable=false

      Ever so often this happens with various versions of OpenAL,
      so I consider an OpenAL bug.


 5. What are all those colors for in Wireframe mode?

 5.1. Red (thick) lines are portal outlines.
      Red (thin) lines are triangle room polygons.
      Black lines are quadralateral room polygons.
      White meshes are entities.
      Blue meshes are sprites.
      Yellow meshes are room models.
      Green lines with red endpoints are room bboxes.
      Pink dots are visibility checks.

 -----------------------------------------------------------------

 6. Why does OpenRaider use TTF fonts?

 6.1. There a few reasons OpenRaider now uses TTF fonts:
      * Lots of quality free TTF fonts on the web these days
      * Custom fonts without the hassle of textile gridding
      * Unicode rendering support ( International text )